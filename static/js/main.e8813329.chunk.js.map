{"version":3,"sources":["components/card/Card.component.jsx","components/card-list/CardList.component.jsx","components/searchbox/Searchbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","monsters","map","monster","Searchbox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVAceA,EAXF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UACTC,IAAG,+BAA0BL,EAA1B,4BACH,6BAAKC,IACL,4BAAIC,MAJ+BF,ICS1BM,EAVE,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACf,OACI,qBAAKJ,UAAU,YAAf,SACGI,EAASC,KAAI,SAACC,GACb,OAAO,cAAC,EAAD,eAAUA,UCMdC,G,MAXG,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC/B,OACE,uBACET,UAAU,aACVU,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgCDG,E,kDAnCb,aAAe,IAAD,8BACZ,gBAMFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SANtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,qDAUd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MACC,SAACC,GAAD,OAAcA,EAASC,UAExBF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAE/C,WACE,MAAkCC,KAAKN,MAA/Bd,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YACZU,EAAmBrB,EAASsB,QAAO,SAACpB,GAAD,OACvCA,EAAQR,KAAK6B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK3B,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,8BACA,cAAC,EAAD,CACEQ,YAAY,sBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUL,SAAUqB,W,GA9BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e8813329.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Card.styles.css';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n  return (\r\n    <div className='card-container' key={id}>\r\n      <img alt='monster'\r\n      src={`https://robohash.org/${id}?set=set2&size=180x180`} />\r\n      <h1>{name}</h1>\r\n      <p>{email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react'\r\nimport './CardList.styles.css';\r\nimport Card from '../card/Card.component.jsx';\r\n\r\nconst CardList = ({monsters}) => {\r\n    return (\r\n        <div className='card-list'>\r\n          {monsters.map((monster) => {\r\n            return <Card {...monster}/>; //Pass all props using destructuring\r\n          })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./Searchbox.styles.css\";\r\n\r\nconst Searchbox = ({placeholder, handleChange}) => {\r\n  return (\r\n    <input\r\n      className='search-box'\r\n      type='search'\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Searchbox;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/CardList.component.jsx\";\nimport Searchbox from \"./components/searchbox/Searchbox.component.jsx\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [], //Monsters Array\n      searchField: \"\"\n    };\n  }\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(\n        (response) => response.json() //Converts response into JSON format\n      )\n      .then((users) => this.setState({ monsters: users }));\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className='App'>\n        <h1 className='title'>Monsters Rolodex</h1>\n        <Searchbox\n          placeholder='Search for Monsters'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}